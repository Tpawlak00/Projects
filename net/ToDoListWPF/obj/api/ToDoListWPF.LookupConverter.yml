### YamlMime:ManagedReference
items:
- uid: ToDoListWPF.LookupConverter
  commentId: T:ToDoListWPF.LookupConverter
  id: LookupConverter
  parent: ToDoListWPF
  children:
  - ToDoListWPF.LookupConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  - ToDoListWPF.LookupConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  - vb
  name: LookupConverter
  nameWithType: LookupConverter
  fullName: ToDoListWPF.LookupConverter
  type: Class
  source:
    id: LookupConverter
    path: C:\Users\raseg\source\repos\net-java-proj\ToDoListWPF\Pages\WorkTAsksPage.xaml.cs
    startLine: 37
  assemblies:
  - ToDoListWPF
  namespace: ToDoListWPF
  syntax:
    content: 'public class LookupConverter : IMultiValueConverter'
    content.vb: >-
      Public Class LookupConverter
          Implements IMultiValueConverter
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IMultiValueConverter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ToDoListWPF.LookupConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:ToDoListWPF.LookupConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: ToDoListWPF.LookupConverter
  langs:
  - csharp
  - vb
  name: Convert(Object[], Type, Object, CultureInfo)
  nameWithType: LookupConverter.Convert(Object[], Type, Object, CultureInfo)
  fullName: ToDoListWPF.LookupConverter.Convert(System.Object[], System.Type, System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    id: Convert
    path: C:\Users\raseg\source\repos\net-java-proj\ToDoListWPF\Pages\WorkTAsksPage.xaml.cs
    startLine: 39
  assemblies:
  - ToDoListWPF
  namespace: ToDoListWPF
  syntax:
    content: public object Convert(object[] values, Type targetType, object parameter, CultureInfo culture)
    parameters:
    - id: values
      type: System.Object[]
    - id: targetType
      type: System.Type
    - id: parameter
      type: System.Object
    - id: culture
      type: System.Globalization.CultureInfo
    return:
      type: System.Object
    content.vb: Public Function Convert(values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object
  overload: ToDoListWPF.LookupConverter.Convert*
  implements:
  - System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  nameWithType.vb: LookupConverter.Convert(Object(), Type, Object, CultureInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ToDoListWPF.LookupConverter.Convert(System.Object(), System.Type, System.Object, System.Globalization.CultureInfo)
  name.vb: Convert(Object(), Type, Object, CultureInfo)
- uid: ToDoListWPF.LookupConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  commentId: M:ToDoListWPF.LookupConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: ToDoListWPF.LookupConverter
  langs:
  - csharp
  - vb
  name: ConvertBack(Object, Type[], Object, CultureInfo)
  nameWithType: LookupConverter.ConvertBack(Object, Type[], Object, CultureInfo)
  fullName: ToDoListWPF.LookupConverter.ConvertBack(System.Object, System.Type[], System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    id: ConvertBack
    path: C:\Users\raseg\source\repos\net-java-proj\ToDoListWPF\Pages\WorkTAsksPage.xaml.cs
    startLine: 45
  assemblies:
  - ToDoListWPF
  namespace: ToDoListWPF
  syntax:
    content: public object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Object
    - id: targetTypes
      type: System.Type[]
    - id: parameter
      type: System.Object
    - id: culture
      type: System.Globalization.CultureInfo
    return:
      type: System.Object[]
    content.vb: Public Function ConvertBack(value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()
  overload: ToDoListWPF.LookupConverter.ConvertBack*
  implements:
  - System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  nameWithType.vb: LookupConverter.ConvertBack(Object, Type(), Object, CultureInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ToDoListWPF.LookupConverter.ConvertBack(System.Object, System.Type(), System.Object, System.Globalization.CultureInfo)
  name.vb: ConvertBack(Object, Type(), Object, CultureInfo)
references:
- uid: ToDoListWPF
  commentId: N:ToDoListWPF
  name: ToDoListWPF
  nameWithType: ToDoListWPF
  fullName: ToDoListWPF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.IMultiValueConverter
  commentId: T:System.Windows.Data.IMultiValueConverter
  parent: System.Windows.Data
  isExternal: true
  name: IMultiValueConverter
  nameWithType: IMultiValueConverter
  fullName: System.Windows.Data.IMultiValueConverter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  isExternal: true
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: ToDoListWPF.LookupConverter.Convert*
  commentId: Overload:ToDoListWPF.LookupConverter.Convert
  name: Convert
  nameWithType: LookupConverter.Convert
  fullName: ToDoListWPF.LookupConverter.Convert
- uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: true
  name: Convert(Object[], Type, Object, CultureInfo)
  nameWithType: IMultiValueConverter.Convert(Object[], Type, Object, CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.Convert(System.Object[], System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: IMultiValueConverter.Convert(Object(), Type, Object, CultureInfo)
  fullName.vb: System.Windows.Data.IMultiValueConverter.Convert(System.Object(), System.Type, System.Object, System.Globalization.CultureInfo)
  name.vb: Convert(Object(), Type, Object, CultureInfo)
  spec.csharp:
  - uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: IMultiValueConverter.Convert
    fullName: System.Windows.Data.IMultiValueConverter.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: IMultiValueConverter.Convert
    fullName: System.Windows.Data.IMultiValueConverter.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: ToDoListWPF.LookupConverter.ConvertBack*
  commentId: Overload:ToDoListWPF.LookupConverter.ConvertBack
  name: ConvertBack
  nameWithType: LookupConverter.ConvertBack
  fullName: ToDoListWPF.LookupConverter.ConvertBack
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  commentId: M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: true
  name: ConvertBack(Object, Type[], Object, CultureInfo)
  nameWithType: IMultiValueConverter.ConvertBack(Object, Type[], Object, CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object, System.Type[], System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: IMultiValueConverter.ConvertBack(Object, Type(), Object, CultureInfo)
  fullName.vb: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object, System.Type(), System.Object, System.Globalization.CultureInfo)
  name.vb: ConvertBack(Object, Type(), Object, CultureInfo)
  spec.csharp:
  - uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: IMultiValueConverter.ConvertBack
    fullName: System.Windows.Data.IMultiValueConverter.ConvertBack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: IMultiValueConverter.ConvertBack
    fullName: System.Windows.Data.IMultiValueConverter.ConvertBack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
